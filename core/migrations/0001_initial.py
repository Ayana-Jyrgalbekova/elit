# Generated by Django 3.2.8 on 2021-12-20 09:31

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('city', models.CharField(max_length=255)),
                ('region', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
                ('price', models.FloatField()),
                ('meter', models.CharField(max_length=250)),
                ('class_home', models.CharField(max_length=255)),
                ('floor', models.PositiveIntegerField()),
                ('materials', models.CharField(max_length=255)),
                ('height', models.FloatField()),
                ('company', models.CharField(max_length=255)),
                ('width', models.FloatField()),
                ('longitude', models.FloatField()),
                ('status', models.CharField(choices=[('новое', 'новое'), ('хорошее', 'хорошее'), ('нужен ремонт', 'нужен ремонт')], default='новое', max_length=12)),
                ('buy', models.CharField(choices=[('продоётся', 'продоётся'), ('в аренду', 'в аренду')], default='продоётся', max_length=9)),
                ('visit', models.IntegerField(default=0, null=True)),
                ('who', models.CharField(help_text='как обращаться', max_length=255)),
                ('number', models.CharField(help_text='как можно сзязаться', max_length=255)),
                ('end_year', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Home',
                'verbose_name_plural': 'Homes',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('home', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.home')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('vid', models.FileField(upload_to='')),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
            },
        ),
        migrations.CreateModel(
            name='ReportImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='default.png', null=True, upload_to='img_publication')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.report')),
            ],
            options={
                'verbose_name': 'ReportImage',
                'verbose_name_plural': 'ReportImages',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.PositiveIntegerField()),
                ('how', models.PositiveIntegerField()),
                ('meters', models.FloatField()),
                ('homes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.home')),
            ],
            options={
                'verbose_name': 'Plan',
                'verbose_name_plural': 'Plans',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='photo', max_length=250, null=True)),
                ('image', models.ImageField(blank=True, default='default.png', null=True, upload_to='img_publication')),
                ('home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.home')),
            ],
            options={
                'verbose_name': 'Photo',
                'verbose_name_plural': 'Photos',
            },
        ),
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.CharField(choices=[('C', 'частное лицо'), ('K', 'строительная компания')], max_length=2)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=8)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'US',
                'verbose_name_plural': 'USS',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
